Redis란?
Remote Dictionary Server의 약자로서, 키-값 구조의 비정형 데이터를 저장하고 관리하기 위한
오픈 소스 기반의 비관계형 데이터베이스 관리 시스템입니다. 2009년 살바토르 산필리포가 처음
개발했으며, 2015년 부터 Redis Labs가 지원하고 있습니다.

데이터베이스를 이용하면 데이터르 ㄹ영속적으로 관리할 수 있지만, 입출력에 다소 시간이 걸리기 때문에 실시간 서비스에서는 더 적합한 저장소를 사용할 필요가 있습니다.
이 Redis는 메모리 기반의 저장소이기 때문에 필요한 정보를 빠르게 저장하고 가져올 수 있는 실시간 서비스에 적합한 저장소이다.

Redis는 메모리 기반의 키-값 저장소로, 쉽게 설명하면 메모리를 캐시처럼 사용하면서 데이터를 빠르게
입출력할 수 있는 저장소이다. 모든 데이터를 메모리에 저장하기때문에 읽기와 쓰기 명령이 매우 빠르다.
그런데 메모리는 휘발성이기 때문에 시스템이 꺼지면 모든 데이터가 날아간다. 따라서 데이터를 지속적으로
유지하기 위해 모든 작업을 로그에 기록해서 디스크에 저장한 후, 시스템을 구동할 때 로그를 기반으로 
데이터를 다시 메모리에 올리는 방식을 사용한다.

따라서 전체 데이터를 영구히 저장하기보다는, 캐시처럼 휘방설이나 ㅣㅁ시성 데이터를 저장하는 데 많이 사용된다.
Cassacndra나 HBase와 같이 NoSQL DBMS로 분류되기도 하고, memcached와 같은 In memery 솔루션으로
분류되기도 한다.

메모리를 이용하여 코속으로 (key, calue> 스타일의 데이터를 저장하고 불러올 수 있는 시스템 정로도만 이해하면 된다.

1. Key/ Value
2. 다양한 데이터 타입
- String : 일반적인 문자열로 최대 512Mbtye 길이까지 지원, Text 문자열뿐만 아니라 integer와 같은 숫자나 JPEG와 같은 Binary 파일까지 저장가능
- Set : String의 집합으로 여러개의 값을 하나의 Value내에 넣을수 있음. 정렬되지 않은 집합형으로, 한 Key에 중복된 데이터는 존재하지 않음. 
        Set에 포함된 요소의 수와 관계없이 일정한 시간으로 체크를 할 수 있는 것이 장점
- Sorted Sets : Set에 Score라는 필드가 추가된 데이터형으로, Score는 일종의 가중치. 데이터는 오름차순으로 내부정렬되며, 정렬하는 기준이 Score. Score값은 중복될 수 없음.
- Lists : String의 집합으로 Set과 유사하지만 일종의 양방향 Linked List. List 앞과 뒤에서 push/pop 연산을 사용해 데이터를 추가 및 삭제가 가능
- Hashes - value에 field와 string value 쌍으로 이루어진테이블을 저장. 객체를 나타내는데 사용 가능. 형태는 List와 비슷하나 필드명, 필드값의 연속으로 이루어짐.

설치하기
Reids 데이터베이스는 따로 설치하고 실행해야 한다, 이강좌에서 간단하게 Redis 모듈을 사용하자
데이터베이스 설치방법 https://redis.io/topics/quickstart

hiredis라는 공식적인 hiredis C 라이브러리를 바인딩하여 Non-Blocking의 빠른 모듈도 있는 데 이를 설치하려면
아래 명령어를 입력한다.
npm install hiredis redis
또한 아래코드를 이용해서 REdis 서버도 설치해준다.sudo apt-get install redis-server

hmset : 해시테이블에 key로 식별되는 value 값들을 항목으로 추가 가능. 첫 번째 인자(해시테이블명), 두 번째 인자들(항목들)
hset : 해시테이블에 key로 식별되는 value 값들을 항목으로 추가. 단, hmset은 여러 개를 입력할 수 있지만 hset은 하나만 가능.
hget : 해당 해시테이블에서, 인자로 받는 항목의 값을 가져옴. 첫 번째 인자(해시테이블명), 두 번째 인자(항목), 세 번째 인자 함수(첫 번째 인자(에러), 두 번째 인자(항목값))
hkeys: 해당 해시테이블의 저장된 항목의 키값을 가져옴. 첫 번째 인자(해시테이블명), 두 번째 인자(함수(첫 번째 인자(에러), 두 번째 인자(항목의 키들))
